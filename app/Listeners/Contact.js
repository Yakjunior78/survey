'use strict';const { publish } = use('App/Services/Messaging/RedisPubSubHandler');const InstanceModel = use('App/Models/Instance');const Dispatch = new(use('App/Services/Survey/Dispatch'))();const ContactHandler = new(use('App/Jobs/Contacts'))();const SessionHandler = new(use('App/Jobs/Session'))();const Contact = exports = module.exports = {}Contact.clone = async (data) => {    let parsedData = JSON.parse(data);    let instance = parsedData.data;    try {        let SurveyInstance = await InstanceModel.find(instance.id);        await ContactHandler.clone(SurveyInstance);        SurveyInstance.cloned = true;        await SurveyInstance.save();        console.log('SEND SURVEY STEP 1: contacts cloned!');        return await Dispatch.handle(SurveyInstance);    } catch (e)    {        console.log('ERROR OCCURRED: ', e.message);    }}Contact.session = async (data) => {    let parsedData = JSON.parse(data);    let instance = parsedData.data;    try {        let SurveyInstance = await InstanceModel.find(instance.id);        await SessionHandler.handle(SurveyInstance);        SurveyInstance.sessions_created = true;        await SurveyInstance.save();        console.log('SEND SURVEY STEP 2: contacts sessions created!');        return await Dispatch.handle(SurveyInstance);    } catch (e)    {        console.log('ERROR OCCURRED: ', e.message)    }}